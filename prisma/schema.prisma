generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  username    String       @unique
  profileImg  String?
  solWalletId String?      @unique
  name        String?
  bountyId    String?
  sub         String       @unique
  bounties    Bounties[]
  prBounties  PrBounties[]
  solWallet   SolWallet?
}

model SolWallet {
  id               String @id @default(uuid())
  publicKey        String
  privateKey       String
  userid           String @unique
  user             User   @relation(fields: [userid], references: [id])
  CurrentBountyBal String @default("0")
}

model Bounties {
  id                   String        @id @default(uuid())
  bountyAmount         String
  issueName            String
  ownerId              String
  issueNumber          String
  issueId              String
  issueDescription     String        @default("")
  completed            Boolean
  githubRepo           String
  githubRepoName       String        @default("")
  winnerId             String?       @default("")
  owner                User          @relation(fields: [ownerId], references: [id])
  contributors         Contributor[] @relation("BountyContributors")
  issueLink            String?       @default("")
  issueProgrammingLang String?
}

model Contributor {
  id             String     @id @default(uuid())
  name           String
  email          String?
  sub            String     @unique
  totalBountyWon String     @default("0")
  solPublicKey   String
  bountiesWonId  String[]   @default([])
  bounties       Bounties[] @relation("BountyContributors")
}

model PrBounties {
  id               String @id @default(uuid())
  token            String @unique
  ownerId          String
  owner            User   @relation(fields: [ownerId], references: [id])
  bountyAmount     String
  prNumber         String
  prLink           String
  winnerSub        String
  walletPrivateKey String
}
